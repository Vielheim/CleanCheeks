openapi: 3.0.3
info:
  title: CleanCheeks REST APIs
  description: |-
    REST API for CleanCheeks backend
  version: 1.0.0
tags:
  - name: Toilets
    description: Toilets
  - name: Ratings
    description: Ratings for each toilet
  - name: Preferences
    description: Preferences for each toilet
  - name: Auth
    description: Authentication routes

paths:
  /api/v1/toilets/neighbours:
    get:
      tags:
        - Toilets
      summary: Get all neighbouring toilets at a coordinate
      description: Get all neighbouring toilets at a given coordinate (latitude, longitude) with an optional radius in metres
      parameters:
        - name: latitude
          in: query
          description: Latitude of the location
          required: true
          schema:
            type: number
            format: double
        - name: longitude
          in: query
          description: Longitude of the location
          required: true
          schema:
            type: number
            format: double
        - name: radius
          in: query
          description: Radius (in metres) from location to retrieve toilets from
          required: false
          schema:
            type: number
            format: double
            default: 400
        - name: userId
          in: query
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetToiletNeighboursResponseArray'
        '400':
          description: Bad request

  /api/v1/toilets/with_user_preferences:
    get:
      tags:
        - Toilets
      summary: Get all toilets with user preferences
      description: Get all toilets with user preferences (i.e. toilets that have been favourited or blacklisted by the user)
      parameters:
        - name: userId
          in: query
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetToiletWithUserPreferencesResponseArray'
        '400':
          description: Bad request

  /api/v1/toilets/ranking:
    get:
      tags:
        - Toilets
      summary: Get toilet ranking
      description: Get the rank of the toilet among other toilets in the database
      parameters:
        - name: id
          in: query
          description: ID of toilet
          required: true
          schema:
            type: string
            format: uuidv4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetToiletRankResponse'
        '400':
          description: Bad request
        '404':
          description: Toilet not found

  /api/v1/toilet_ratings:
    post:
      tags:
        - Ratings
      summary: Create a toilet rating
      description: Add a toilet rating when a user rates a toilet clean / dirty.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRatingDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/CreateRatingDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateRatingDTO'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateRatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreateRatingResponse'
        '400':
          description: Bad request

  /api/v1/toilet_ratings/last-rated:
    get:
      tags:
        - Ratings
      summary: Queries when the user last rated for this toilet
      description: Queries when the user last rated for this toilet.
      parameters:
        - name: toilet_id
          in: query
          description: ID of toilet
          required: true
          schema:
            type: string
            format: uuidv4
        - name: user_id
          in: query
          description: ID of user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLastRatingResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UserLastRatingResponse'
        '400':
          description: Bad request

  /api/v1/toilet_preferences:
    put:
      tags:
        - Preferences
      summary: Upsert a toilet preference
      description: Upsert a toilet preference to be favourited or blacklisted.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpsertPreferenceDTO'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpsertPreferenceDTO'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpsertPreferenceDTO'
        required: true
      responses:
        '200':
          description: Success - Created toilet preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatePreferenceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/CreatePreferenceResponse'
        '201':
          description: Success - Updated toilet preference
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePreferenceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/UpdatePreferenceResponse'
        '400':
          description: Bad request
    delete:
      tags:
        - Preferences
      summary: Delete a toilet preference
      description: Delete a toilet preference
      parameters:
        - name: userId
          in: query
          description: Id of current user
          required: true
          explode: true
          schema:
            type: string
            format: uuidv4
        - name: toiletId
          in: query
          description: Id of favourited / blacklisted toilet
          required: true
          explode: true
          schema:
            type: string
            format: uuidv4
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePreferenceResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/DeletePreferenceResponse'
        '400':
          description: Bad request

  /api/v1/auth/google:
    post:
      tags:
        - Auth
      summary: Verifies user's Google account, creates a new user or retrieves an existing user and generates JWT
      description: Verifies user's Google account using a Google ID token, creates a new user or retrieves an existing user using the unique Google ID, and returns a generated JWT.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleLoginRequestBody'
          application/xml:
            schema:
              $ref: '#/components/schemas/GoogleLoginRequestBody'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GoogleLoginRequestBody'
        required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoogleLoginResponse'
        '400':
          description: Bad request
  /api/v1/auth/check-login:
    get:
      tags:
        - Auth
      summary: Verifies JWT
      description: Verifies the user's JWT in the request header to determine if it is still valid.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckLoginResponse'
        '400':
          description: Bad request

components:
  schemas:
    CreateRatingDTO:
      type: object
      required:
        - toilet_id
        - user_id
        - type
      properties:
        toilet_id:
          type: string
          format: uuidv4
          example: 7c2e5a75-286f-4c17-bbb4-21e645678e28
        user_id:
          type: string
          example: 448d37ef-c7ed-495b-972f-81995bb25c2d
        type:
          type: string
          enum: [CLEAN, DIRTY]
          example: CLEAN
    Rating:
      type: object
      properties:
        id:
          type: string
          example: c58fb93f-63d2-421f-a7dc-66c2bf903710
        toilet_id:
          type: string
          example: 7c2e5a75-286f-4c17-bbb4-21e645678e28
        user_id:
          type: string
          example: 448d37ef-c7ed-495b-972f-81995bb25c2d
        type:
          type: string
          example: CLEAN
        createdAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
        updatedAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
        nextRatingTime:
          type: string
          example: 2022-09-14T10:06:51.277Z
    CreateRatingResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Added rating
        data:
          $ref: '#/components/schemas/Rating'
    UserLastRatingResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Retrieved last rating by user
        data:
          $ref: '#/components/schemas/Rating'
    UpsertPreferenceDTO:
      type: object
      required:
        - toilet_id
        - user_id
        - type
      properties:
        toilet_id:
          type: string
          format: uuidv4
          example: 7c2e5a75-286f-4c17-bbb4-21e645678e28
        user_id:
          type: string
          example: 448d37ef-c7ed-495b-972f-81995bb25c2d
        type:
          type: string
          enum: [BLACKLIST, FAVOURITE]
          example: FAVOURITE
    Preference:
      type: object
      properties:
        toilet_id:
          type: string
          example: 7c2e5a75-286f-4c17-bbb4-21e645678e28
        user_id:
          type: string
          example: 448d37ef-c7ed-495b-972f-81995bb25c2d
        type:
          type: string
          example: FAVOURITE
        createdAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
        updatedAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
    CreatePreferenceResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Added new toilet preference
        data:
          $ref: '#/components/schemas/Preference'
    UpdatePreferenceResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Update existing toilet preference
        data:
          $ref: '#/components/schemas/Preference'
    DeletePreferenceResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Deleted toilet preference
        data:
          type: boolean
          example: true
    Toilet:
      type: object
      properties:
        id:
          type: string
          format: uuidv4
          example: aa39c1e1-7591-47a9-a11c-1566e0b29e9e
        building:
          type: string
          example: COM2
        description:
          type: string
          example: Beside the library
        floor:
          type: integer
          example: 1
        longitude:
          type: number
          format: double
          example: 1.2924024167154038
        latitude:
          type: number
          format: double
          example: 103.77438630260782
        num_seats:
          type: integer
          example: 3
        num_squats:
          type: integer
          example: 3
        cleanliness:
          type: number
          format: double
          example: 0
        num_ratings:
          type: integer
          example: 0
        type:
          type: string
          enum: [MALE, FEMALE, HANDICAP]
          example: FEMALE
        utilities:
          type: array
          items:
            type: string
            enum: [SHOWERS, FRAGRANCE, BIDETS, WATERCOOLER]
          example: [BIDETS]
        createdAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
        updatedAt:
          type: string
          example: 2022-09-14T09:36:51.277Z
        user_preference_type:
          type: string
          enum: [BLACKLIST, FAVOURITE]
          example: FAVOURITE
    GetToiletNeighboursResponseArray:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Retrieved all neighbouring toilets
        data:
          type: array
          items:
            $ref: '#/components/schemas/Toilet'
    GetToiletWithUserPreferencesResponseArray:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Retrieved toilets set with user preferences
        data:
          properties:
            blacklistedToilets:
              type: array
              items:
                $ref: '#/components/schemas/Toilet'
            favouritedToilets:
              type: array
              items:
                $ref: '#/components/schemas/Toilet'
    GetToiletRankResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Retrieved toilet ranking
        data:
          properties:
            toilet:
              $ref: '#/components/schemas/Toilet'
            rank:
              type: integer
              example: 15
            percentageBeat:
              type: integer
              example: 98.8
            toiletCount:
              type: integer
              example: 800
    GoogleLoginRequestBody:
      type: object
      required:
        - credential
      properties:
        credential:
          type: string
          example: 928375087-109240-9170297401-928401-957038750-81720
    GoogleLoginResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Successfully logged in
        data:
          properties:
            user_id:
              type: string
              example: aa39c1e1-7591-47a9-a11c-1566e0b29e9e
            accessToken:
              type: string
              example: lhdCI6MTY2MzkwMTcwOCkpXVCJ9jBUMDc6MDA6MDQuMDQyWiIsImwiZJ8xphSS7iA0tUtIK4
    CheckLoginResponse:
      type: object
      properties:
        status:
          type: string
          example: success
        message:
          type: string
          example: Successfully authenticated
        data:
          type: boolean
          example: true
